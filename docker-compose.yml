services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
        NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL}
        NEXT_PUBLIC_LOGFLARE_API_TOKEN: ${NEXT_PUBLIC_LOGFLARE_API_TOKEN}
        NEXT_PUBLIC_LOGFLARE_CLIENT_TOKEN: ${NEXT_PUBLIC_LOGFLARE_CLIENT_TOKEN}
        NEXT_PUBLIC_TURNSTILE_SITE_KEY: ${NEXT_PUBLIC_TURNSTILE_SITE_KEY}
        SMTP_HOST: ${SMTP_HOST}
        SMTP_PORT: ${SMTP_PORT}
        SMTP_USER: ${SMTP_USER}
        SMTP_PASSWORD: ${SMTP_PASSWORD}
    image: 'ghcr.io/generation-d/application-platform-prd:latest'
    container_name: frontend
  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      - frontend

volumes:
  caddy_data:
  caddy_config:
